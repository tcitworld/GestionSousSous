package layout;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

import tcitsteam.gestionsoussous.AddExpense;
import tcitsteam.gestionsoussous.MaBaseSQLite;
import tcitsteam.gestionsoussous.MainActivity;
import tcitsteam.gestionsoussous.MyAdapter;
import tcitsteam.gestionsoussous.Operation;
import tcitsteam.gestionsoussous.R;
import tcitsteam.gestionsoussous.RecyclerItemClickListener;

/**
 * A simple {@link Fragment} subclass.
 * Activities that contain this fragment must implement the
 * {@link ListExpenses.OnFragmentInteractionListener} interface
 * to handle interaction events.
 * Use the {@link ListExpenses#newInstance} factory method to
 * create an instance of this fragment.
 */
public class ListExpenses extends Fragment {
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String OPERATIONS = "cpt";
    private static final String BD = "maBase";

    // TODO: Rename and change types of parameters
    private RecyclerView mRecyclerView;
    private RecyclerView.Adapter mAdapter;
    private RecyclerView.LayoutManager mLayoutManager;
    ArrayList<Operation> cpt;
    MaBaseSQLite maBase;

    private OnFragmentInteractionListener mListener;

    public ListExpenses() {
        // Required empty public constructor
    }


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        mRecyclerView = (RecyclerView) getView().findViewById(R.id.my_recycler_view);

        // use this setting to improve performance if you know that changes
        // in content do not change the layout size of the RecyclerView
        mRecyclerView.setHasFixedSize(true);

        // use a linear layout manager
        mLayoutManager = new LinearLayoutManager(getActivity());
        mRecyclerView.setLayoutManager(mLayoutManager);

        maBase = new MaBaseSQLite(getActivity().getBaseContext());

        cpt = maBase.getAllValues();
        Collections.sort(cpt, new Comparator<Operation>() {
            public int compare(Operation a, Operation b) {
                return b.getId() - a.getId();
            }
        });

        mAdapter = new MyAdapter(cpt);
        mRecyclerView.setAdapter(mAdapter);
        mRecyclerView.addOnItemTouchListener(
                new RecyclerItemClickListener(getActivity(), new RecyclerItemClickListener.OnItemClickListener() {
                    @Override public void onItemClick(View view, int position) {
                        Intent i = new Intent(getActivity(), AddExpense.class);
                        i.putExtra("obj", cpt.get(position));
                        i.putExtra("key", position);
                        startActivityForResult(i, 1);
                    }
                })
        );

        FloatingActionButton fab = (FloatingActionButton) getView().findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent i = new Intent(getActivity(), AddExpense.class);
                Bundle bundle = new Bundle();
                bundle.putSerializable("cpt", cpt);
                i.putExtras(bundle);
                startActivityForResult(i,1);
            }
        });
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_list_expenses, container, false);
    }


    @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        if (context instanceof OnFragmentInteractionListener) {
            mListener = (OnFragmentInteractionListener) context;
        } else {
            throw new RuntimeException(context.toString()
                    + " must implement OnFragmentInteractionListener");
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1) {

            if(resultCode == Activity.RESULT_OK){

                Operation ex = (Operation) data.getExtras().getSerializable("obj");

                if (data.getExtras().getBoolean("delete")) {
                    Log.d("Action","Deleting operation" + ex);
                    maBase.deleteExpense(ex);
                }

                if (data.getExtras().getBoolean("new")) {
                    Log.d("expense", ex.toString());
                    cpt.add(0,ex);
                    maBase.insertExpense(ex);
                } else {
                    int pos = data.getIntExtra("key",0);
                    cpt.set(pos,ex);
                    maBase.editExpense(ex);
                }
                for (int i = 0;i<cpt.size();i++)
                    Log.d("TAG", cpt.get(i).toString());

                //mAdapter.notifyDataSetChanged();
            }
            if (resultCode == Activity.RESULT_CANCELED) {
                //Do nothing?
            }
        }
    }

    /**
     * This interface must be implemented by activities that contain this
     * fragment to allow an interaction in this fragment to be communicated
     * to the activity and potentially other fragments contained in that
     * activity.
     * <p/>
     * See the Android Training lesson <a href=
     * "http://developer.android.com/training/basics/fragments/communicating.html"
     * >Communicating with Other Fragments</a> for more information.
     */
    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        void onFragmentInteraction(Uri uri);
    }
}
